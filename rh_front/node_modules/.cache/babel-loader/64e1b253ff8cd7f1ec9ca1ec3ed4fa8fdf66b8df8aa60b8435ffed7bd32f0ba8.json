{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\Rotsy\\\\S5\\\\Mr_Tovo\\\\rh_front\\\\src\\\\Component\\\\FormProfilNumber.js\",\n  _s = $RefreshSig$();\nimport '../params/FormProfilNumber.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect\n} = require(\"react\");\nfunction FormProfilNumber() {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [formValues, setFormValues] = useState({\n    selectedOption: '',\n    // Stocke la valeur sélectionnée dans le menu déroulant\n    numberOfProfiles: '' // Stocke le nombre de profils saisi\n  });\n\n  //getProfil in back \n  useEffect(() => {\n    fetch('http://localhost:8080/rh_back/ProfilController').then(response => response.json()).then(data => setOptions(data)).catch(error => console.error('Erreur lors de la récupération des données : ', error));\n  }, []);\n  // --end\n\n  const handleSelectChange = event => {\n    console.log(\"Selected Option ID:\", event.target.value);\n    setFormValues(prevState => ({\n      ...prevState,\n      selectedOption: event.target.value\n    }));\n  };\n  const handleNumberInputChange = event => {\n    setFormValues(prevState => ({\n      ...prevState,\n      numberOfProfiles: event.target.value\n    }));\n  };\n  const handleFormSubmit = () => {\n    const gsonData = {\n      optionId: formValues.selectedOption,\n      numberOfProfiles: formValues.numberOfProfiles\n    };\n    fetch('http://localhost:8080/rh_back/ProfilageController', {\n      method: 'POST',\n      headers: {}\n    });\n\n    // Envoyez gsonData à votre API ou effectuez toute autre opération souhaitée avec les données.\n    // console.log(JSON.stringify(gsonData)); // Affiche les données au format JSON dans la console\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"FormProfilNumber\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Choisissez un profil :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: formValues.selectedOption,\n      onChange: handleSelectChange,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: parseInt(option.id, 10),\n        children: option.nom\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Nombre: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: formValues.numberOfProfiles,\n      onChange: handleNumberInputChange,\n      width: \"50%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(FormProfilNumber, \"mgkb2pabMUeQ6LFa21n8JZ+2KeE=\");\n_c = FormProfilNumber;\nexport default FormProfilNumber;\nvar _c;\n$RefreshReg$(_c, \"FormProfilNumber\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","useState","useEffect","require","FormProfilNumber","_s","options","setOptions","formValues","setFormValues","selectedOption","numberOfProfiles","fetch","then","response","json","data","catch","error","console","handleSelectChange","event","log","target","value","prevState","handleNumberInputChange","handleFormSubmit","gsonData","optionId","method","headers","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","option","parseInt","nom","type","width","onClick","_c","$RefreshReg$"],"sources":["D:/ITU/Rotsy/S5/Mr_Tovo/rh_front/src/Component/FormProfilNumber.js"],"sourcesContent":["import '../params/FormProfilNumber.css';\r\n\r\nconst { useState , useEffect } = require(\"react\");\r\n\r\nfunction FormProfilNumber(){\r\n\r\n    const[options,setOptions]=useState([]);\r\n\r\n    const [formValues, setFormValues] = useState({\r\n      selectedOption: '', // Stocke la valeur sélectionnée dans le menu déroulant\r\n      numberOfProfiles: '', // Stocke le nombre de profils saisi\r\n    });\r\n\r\n    //getProfil in back \r\n    useEffect(() => {\r\n        fetch('http://localhost:8080/rh_back/ProfilController')\r\n          .then(response => response.json())\r\n          .then(data => setOptions(data))\r\n          .catch(error => console.error('Erreur lors de la récupération des données : ', error));\r\n      }, []);\r\n    // --end\r\n\r\n      const handleSelectChange = event => {\r\n        console.log(\"Selected Option ID:\", event.target.value);\r\n        setFormValues(prevState => ({\r\n          ...prevState,\r\n          selectedOption: event.target.value,\r\n        }));\r\n      };      \r\n      \r\n      const handleNumberInputChange = event => {\r\n        setFormValues(prevState => ({\r\n          ...prevState,\r\n          numberOfProfiles: event.target.value,\r\n        }));\r\n      };\r\n\r\n      const handleFormSubmit = () => {\r\n        const gsonData = {\r\n          optionId: formValues.selectedOption,\r\n          numberOfProfiles: formValues.numberOfProfiles,\r\n        };\r\n\r\n        fetch('http://localhost:8080/rh_back/ProfilageController', {\r\n          method:'POST',\r\n          headers: {\r\n            \r\n          }\r\n        })\r\n      \r\n        // Envoyez gsonData à votre API ou effectuez toute autre opération souhaitée avec les données.\r\n        // console.log(JSON.stringify(gsonData)); // Affiche les données au format JSON dans la console\r\n      };      \r\n      \r\n\r\n      return (\r\n        <div id=\"FormProfilNumber\">\r\n\r\n          <label>Choisissez un profil :</label>\r\n            <select value={formValues.selectedOption} onChange={handleSelectChange}>\r\n                {options.map(option => (\r\n                  <option key={option.id} value={parseInt(option.id, 10)}>\r\n                    {option.nom}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              <label>Nombre: </label>\r\n              <input\r\n                type=\"number\"\r\n                value={formValues.numberOfProfiles}\r\n                onChange={handleNumberInputChange}\r\n                width='50%'\r\n              />\r\n\r\n              <button onClick={handleFormSubmit}>Valider</button>\r\n\r\n        </div>\r\n      );    \r\n}\r\n\r\nexport default FormProfilNumber;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}