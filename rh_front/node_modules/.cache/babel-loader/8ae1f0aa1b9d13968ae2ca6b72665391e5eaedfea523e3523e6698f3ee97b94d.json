{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\Rotsy\\\\S5\\\\Mr_Tovo\\\\rh_front\\\\src\\\\Component\\\\FormProfil.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Selector from './Selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormProfil = ({\n  title,\n  value\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [profils, setProfils] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/rh_back/ProfilController') // Replace with the actual endpoint\n    .then(response => {\n      const profilsData = response.data;\n      setProfils(profilsData);\n    }).catch(error => {\n      console.error('Error fetching services:', error);\n    });\n  }, []);\n  const [formData, setFormData] = useState({\n    selectedOptionProfil: ''\n  });\n  const handleInputChange = (name, value) => {\n    _s();\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // PROFIL =================================================================================================================\n    // Define a variable for the placeholder text\n    const [placeholderProfil, setPlaceholderProfil] = useState('Select a profil');\n    const profilsOptions = profils.map(profil => ({\n      label: profil.nom,\n      //  \"label\" is the name that will display\n      value: profil.id\n    }));\n    const optionToNameMap = {};\n    profilsOptions.forEach(profil => {\n      optionToNameMap[profil.value] = profil.label;\n    });\n    const handleServiceInputChange = (name, value) => {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n\n      // Set the placeholder based on the selected option's name\n      const placeholder = optionToNameMap[value] || 'Select a profil';\n      setPlaceholderProfil(placeholder);\n    };\n\n    // END PROFIL =================================================================================================================\n\n    const navigate = useNavigate();\n    const handleSubmit = async e => {\n      e.preventDefault();\n\n      // Create an object containing the form data\n      const formDataObject = {\n        selectedOptionProfil: formData.selectedOptionProfil,\n        nom: \"rakoto\",\n        prenom: \"Bozy\"\n        // Add other form fields here as needed\n      };\n\n      //   try {\n      //     // Send a POST request to your Java Servlet endpoint\n      //     const response = await axios.post(\n      //       'http://localhost:8080/rh_back/SubmitProfilController',\n      //       formDataObject\n      //     );\n\n      //     // Handle the response from the server here\n      //     console.log('Server Response:', response.data);\n\n      //     // Redirect to another page if needed\n      //     // history.push('/ProfilageView');\n      //   } catch (error) {\n      //     // Handle errors here\n      //     console.error('Error:', error);\n      //   }\n      navigate(\"/ProfilageView\");\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Selector, {\n            options: profilsOptions,\n            placeholder: placeholderProfil // Use the dynamic placeholder text\n            ,\n            label: \"Profil:\",\n            value: formData.selectedOptionService,\n            onChange: value => handleServiceInputChange('selectedOptionProfil', value),\n            marginleft: \"5%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginLeft: '5%'\n          },\n          children: \"Cr\\xE9er\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          children: \"Initialiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this);\n  };\n  _s(handleInputChange, \"LTxEj1xGwb7SIe/8NYNomJ2XASM=\", false, function () {\n    return [useNavigate];\n  });\n};\n_s2(FormProfil, \"F6puickwj9rqkioH1VElmnWOK5A=\");\n_c = FormProfil;\nexport default FormProfil;\nvar _c;\n$RefreshReg$(_c, \"FormProfil\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Selector","jsxDEV","_jsxDEV","FormProfil","title","value","_s2","_s","$RefreshSig$","profils","setProfils","get","then","response","profilsData","data","catch","error","console","formData","setFormData","selectedOptionProfil","handleInputChange","name","placeholderProfil","setPlaceholderProfil","profilsOptions","map","profil","label","nom","id","optionToNameMap","forEach","handleServiceInputChange","placeholder","navigate","handleSubmit","e","preventDefault","formDataObject","prenom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","options","selectedOptionService","onChange","marginleft","type","style","marginLeft","_c","$RefreshReg$"],"sources":["D:/ITU/Rotsy/S5/Mr_Tovo/rh_front/src/Component/FormProfil.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Selector from './Selector';\r\n\r\n\r\n\r\nconst FormProfil=({title,value})=>{\r\n\r\n    const [profils, setProfils] = useState([]);\r\n\r\n    useEffect(() => {\r\n      axios.get('http://localhost:8080/rh_back/ProfilController') // Replace with the actual endpoint\r\n        .then((response) => {\r\n          const profilsData = response.data;\r\n          setProfils(profilsData);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching services:', error);\r\n        });\r\n    }, []);\r\n\r\n    const [formData, setFormData] = useState({\r\n        selectedOptionProfil: '',\r\n    });\r\n\r\n    const handleInputChange = (name, value) => {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: value,\r\n        });\r\n\r\n        // PROFIL =================================================================================================================\r\n    // Define a variable for the placeholder text\r\n    const [placeholderProfil, setPlaceholderProfil] = useState('Select a profil');\r\n    const profilsOptions = profils.map((profil) => ({\r\n      label: profil.nom, //  \"label\" is the name that will display\r\n      value: profil.id,\r\n    }));\r\n    const optionToNameMap = {};\r\n    profilsOptions.forEach((profil) => {\r\n      optionToNameMap[profil.value] = profil.label;\r\n    });\r\n    const handleServiceInputChange = (name,value) => {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    \r\n      // Set the placeholder based on the selected option's name\r\n      const placeholder = optionToNameMap[value] || 'Select a profil';\r\n      setPlaceholderProfil(placeholder);\r\n    }\r\n\r\n    // END PROFIL =================================================================================================================\r\n\r\n    const navigate = useNavigate();\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n    \r\n      // Create an object containing the form data\r\n      const formDataObject = {\r\n        selectedOptionProfil: formData.selectedOptionProfil,\r\n        nom:\"rakoto\",\r\n        prenom:\"Bozy\",\r\n        // Add other form fields here as needed\r\n      };\r\n    \r\n    //   try {\r\n    //     // Send a POST request to your Java Servlet endpoint\r\n    //     const response = await axios.post(\r\n    //       'http://localhost:8080/rh_back/SubmitProfilController',\r\n    //       formDataObject\r\n    //     );\r\n    \r\n    //     // Handle the response from the server here\r\n    //     console.log('Server Response:', response.data);\r\n    \r\n    //     // Redirect to another page if needed\r\n    //     // history.push('/ProfilageView');\r\n    //   } catch (error) {\r\n    //     // Handle errors here\r\n    //     console.error('Error:', error);\r\n    //   }\r\n      navigate(\"/ProfilageView\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n          <h1>{title}</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <Selector\r\n                options={profilsOptions}\r\n                placeholder={placeholderProfil} // Use the dynamic placeholder text\r\n                label=\"Profil:\"\r\n                value={formData.selectedOptionService}\r\n                onChange={(value) => handleServiceInputChange('selectedOptionProfil', value)}\r\n                marginleft=\"5%\"\r\n              />\r\n            </div>\r\n            {/* input */}\r\n    \r\n            <button type=\"submit\" style={{ marginLeft: '5%' }}>\r\n              Cr√©er\r\n            </button>\r\n            <button type=\"reset\">Initialiser</button>\r\n          </form>\r\n        </div>\r\n      );\r\n\r\n    \r\n\r\n}\r\n\r\n};\r\nexport default FormProfil;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,MAAMC,UAAU,GAACA,CAAC;EAACC,KAAK;EAACC;AAAK,CAAC,KAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAE9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACY,GAAG,CAAC,gDAAgD,CAAC,CAAC;IAAA,CACzDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI;MACjCL,UAAU,CAACI,WAAW,CAAC;IACzB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC;IACrCyB,oBAAoB,EAAE;EAC1B,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGA,CAACC,IAAI,EAAElB,KAAK,KAAK;IAAAE,EAAA;IACvCa,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACI,IAAI,GAAGlB;IACV,CAAC,CAAC;;IAEF;IACJ;IACA,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7B,QAAQ,CAAC,iBAAiB,CAAC;IAC7E,MAAM8B,cAAc,GAAGjB,OAAO,CAACkB,GAAG,CAAEC,MAAM,KAAM;MAC9CC,KAAK,EAAED,MAAM,CAACE,GAAG;MAAE;MACnBzB,KAAK,EAAEuB,MAAM,CAACG;IAChB,CAAC,CAAC,CAAC;IACH,MAAMC,eAAe,GAAG,CAAC,CAAC;IAC1BN,cAAc,CAACO,OAAO,CAAEL,MAAM,IAAK;MACjCI,eAAe,CAACJ,MAAM,CAACvB,KAAK,CAAC,GAAGuB,MAAM,CAACC,KAAK;IAC9C,CAAC,CAAC;IACF,MAAMK,wBAAwB,GAAGA,CAACX,IAAI,EAAClB,KAAK,KAAK;MAC/Ce,WAAW,CAAC;QACV,GAAGD,QAAQ;QACX,CAACI,IAAI,GAAGlB;MACV,CAAC,CAAC;;MAEF;MACA,MAAM8B,WAAW,GAAGH,eAAe,CAAC3B,KAAK,CAAC,IAAI,iBAAiB;MAC/DoB,oBAAoB,CAACU,WAAW,CAAC;IACnC,CAAC;;IAED;;IAEA,MAAMC,QAAQ,GAAGtC,WAAW,CAAC,CAAC;IAC9B,MAAMuC,YAAY,GAAG,MAAOC,CAAC,IAAK;MAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;MAElB;MACA,MAAMC,cAAc,GAAG;QACrBnB,oBAAoB,EAAEF,QAAQ,CAACE,oBAAoB;QACnDS,GAAG,EAAC,QAAQ;QACZW,MAAM,EAAC;QACP;MACF,CAAC;;MAEH;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACEL,QAAQ,CAAC,gBAAgB,CAAC;IAC5B,CAAC;IAED,oBACIlC,OAAA;MAAKwC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BzC,OAAA;QAAAyC,QAAA,EAAKvC;MAAK;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChB7C,OAAA;QAAM8C,QAAQ,EAAEX,YAAa;QAAAM,QAAA,gBAC3BzC,OAAA;UAAAyC,QAAA,eACEzC,OAAA,CAACF,QAAQ;YACPiD,OAAO,EAAEvB,cAAe;YACxBS,WAAW,EAAEX,iBAAkB,CAAC;YAAA;YAChCK,KAAK,EAAC,SAAS;YACfxB,KAAK,EAAEc,QAAQ,CAAC+B,qBAAsB;YACtCC,QAAQ,EAAG9C,KAAK,IAAK6B,wBAAwB,CAAC,sBAAsB,EAAE7B,KAAK,CAAE;YAC7E+C,UAAU,EAAC;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGN7C,OAAA;UAAQmD,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAK,CAAE;UAAAZ,QAAA,EAAC;QAEnD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7C,OAAA;UAAQmD,IAAI,EAAC,OAAO;UAAAV,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAKd,CAAC;EAAAxC,EAAA,CAvFSe,iBAAiB;IAAA,QA8BNxB,WAAW;EAAA;AA2DhC,CAAC;AAACQ,GAAA,CA5GIH,UAAU;AAAAqD,EAAA,GAAVrD,UAAU;AA6GhB,eAAeA,UAAU;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}