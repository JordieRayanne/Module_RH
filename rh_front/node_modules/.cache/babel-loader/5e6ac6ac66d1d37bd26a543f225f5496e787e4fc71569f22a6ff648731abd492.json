{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\Rotsy\\\\S5\\\\Mr_Tovo\\\\rh_front\\\\src\\\\Component\\\\FormBesoin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../params/FormBesoin.css';\nimport Selector from './Selector';\nimport VolumeHommeJour from './VolumeHommeJour';\nimport VolumeHoraire from './VolumeHoraire';\nimport VolumeTache from './VolumeTache';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormBesoin = ({\n  title,\n  value\n}) => {\n  _s();\n  // request getAllService : all services will be stocked in services variable.\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8081/rh_back/ServiceController') // Replace with the actual endpoint\n    .then(response => {\n      const servicesData = response.data;\n      setServices(servicesData);\n    }).catch(error => {\n      console.error('Error fetching services:', error);\n    });\n  }, []);\n  const [formData, setFormData] = useState({\n    selectedOptionVolume: '',\n    selectedOptionService: ''\n  });\n  const [showVolumeTache, setShowVolumeTache] = useState(false);\n  const [showVolumeHoraire, setShowVolumeHoraire] = useState(false);\n  const [showVolumeHommeJour, setShowVolumeHommeJour] = useState(false);\n  const handleInputChange = (name, value) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Update the state variables to control component visibility\n    if (value === '1') {\n      setShowVolumeTache(true);\n      setShowVolumeHoraire(false);\n      setShowVolumeHommeJour(false);\n    } else if (value === '2') {\n      setShowVolumeTache(false);\n      setShowVolumeHoraire(true);\n      setShowVolumeHommeJour(false);\n    } else if (value === '3') {\n      setShowVolumeHoraire(false);\n      setShowVolumeTache(false);\n      setShowVolumeHommeJour(true);\n    } else {\n      setShowVolumeTache(false);\n      setShowVolumeHoraire(false);\n    }\n  };\n\n  // Define a variable for the placeholder text\n  let placeholderText = 'Select an option';\n\n  // Update the placeholder text based on the selected option\n  if (formData.selectedOptionVolume === '1') {\n    placeholderText = 'Taches';\n  } else if (formData.selectedOptionVolume === '2') {\n    placeholderText = 'Heures';\n  } else if (formData.selectedOptionVolume === '3') {\n    placeholderText = 'Homme Jour';\n  }\n\n  // SERVICE =================================================================================================================\n  // Define a variable for the placeholder text\n  const [placeholderService, setPlaceholderService] = useState('Select a service or department');\n  const servicesOptions = services.map(service => ({\n    label: service.nom,\n    //  \"label\" is the name that will display\n    value: service.id\n  }));\n  const optionToNameMap = {};\n  servicesOptions.forEach(service => {\n    optionToNameMap[service.value] = service.label;\n  });\n  const handleServiceInputChange = (name, value) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Set the placeholder based on the selected option's name\n    const placeholder = optionToNameMap[value] || 'Select a service or department';\n    setPlaceholderService(placeholder);\n  };\n\n  // END SERVICE =================================================================================================================\n\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create an object containing the form data\n    const formDataObject = {\n      selectedOptionService: formData.selectedOptionService,\n      selectedOptionVolume: formData.selectedOptionVolume,\n      nom: \"rakoto\",\n      prenom: \"Bozy\"\n      // Add other form fields here as needed\n    };\n\n    try {\n      // Send a POST request to your Java Servlet endpoint\n      const response = await axios.post('http://localhost:8081/rh_back/SubmitBesoinController', formDataObject);\n\n      // Handle the response from the server here\n      console.log('Server Response:', response.data);\n\n      // Redirect to another page if needed\n      // history.push('/ProfilageView');\n    } catch (error) {\n      // Handle errors here\n      console.error('Error:', error);\n    }\n    navigate(\"/ProfilageView\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Selector, {\n          options: servicesOptions,\n          placeholder: placeholderService // Use the dynamic placeholder text\n          ,\n          label: \"Service ou departement:\",\n          value: formData.selectedOptionService,\n          onChange: value => handleServiceInputChange('selectedOptionService', value),\n          marginleft: \"5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Selector, {\n          options: [{\n            label: 'Volume taches',\n            value: '1'\n          }, {\n            label: 'Volume horaires',\n            value: '2'\n          }, {\n            label: 'Volume HommeJour',\n            value: '3'\n          }],\n          placeholder: placeholderText // Use the dynamic placeholder text\n          ,\n          label: \"Unite de volume de travail\",\n          value: formData.selectedOptionVolume,\n          onChange: value => handleInputChange('selectedOptionVolume', value),\n          marginleft: \"5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), showVolumeTache && /*#__PURE__*/_jsxDEV(VolumeTache, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }, this), showVolumeHoraire && /*#__PURE__*/_jsxDEV(VolumeHoraire, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 31\n      }, this), showVolumeHommeJour && /*#__PURE__*/_jsxDEV(VolumeHommeJour, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: '5%'\n        },\n        children: \"Cr\\xE9er\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        children: \"Initialiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBesoin, \"Vi2t21WeKiJyy8tjIB+dijVydLA=\", false, function () {\n  return [useNavigate];\n});\n_c = FormBesoin;\nexport default FormBesoin;\nvar _c;\n$RefreshReg$(_c, \"FormBesoin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Selector","VolumeHommeJour","VolumeHoraire","VolumeTache","axios","jsxDEV","_jsxDEV","FormBesoin","title","value","_s","services","setServices","get","then","response","servicesData","data","catch","error","console","formData","setFormData","selectedOptionVolume","selectedOptionService","showVolumeTache","setShowVolumeTache","showVolumeHoraire","setShowVolumeHoraire","showVolumeHommeJour","setShowVolumeHommeJour","handleInputChange","name","placeholderText","placeholderService","setPlaceholderService","servicesOptions","map","service","label","nom","id","optionToNameMap","forEach","handleServiceInputChange","placeholder","navigate","handleSubmit","e","preventDefault","formDataObject","prenom","post","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","options","onChange","marginleft","type","style","marginLeft","_c","$RefreshReg$"],"sources":["D:/ITU/Rotsy/S5/Mr_Tovo/rh_front/src/Component/FormBesoin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../params/FormBesoin.css';\r\nimport Selector from './Selector';\r\nimport VolumeHommeJour from './VolumeHommeJour';\r\nimport VolumeHoraire from './VolumeHoraire';\r\nimport VolumeTache from './VolumeTache';\r\nimport axios from 'axios';\r\n\r\nconst FormBesoin = ({ title, value }) => {\r\n\r\n  // request getAllService : all services will be stocked in services variable.\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8081/rh_back/ServiceController') // Replace with the actual endpoint\r\n      .then((response) => {\r\n        const servicesData = response.data;\r\n        setServices(servicesData);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching services:', error);\r\n      });\r\n  }, []);\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    selectedOptionVolume: '',\r\n    selectedOptionService: '',\r\n  });\r\n\r\n  const [showVolumeTache, setShowVolumeTache] = useState(false);\r\n  const [showVolumeHoraire, setShowVolumeHoraire] = useState(false);\r\n  const [showVolumeHommeJour, setShowVolumeHommeJour] = useState(false);\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n\r\n    // Update the state variables to control component visibility\r\n    if (value === '1') {\r\n      setShowVolumeTache(true);\r\n      setShowVolumeHoraire(false);\r\n      setShowVolumeHommeJour(false);\r\n    } else if (value === '2') {\r\n      setShowVolumeTache(false);\r\n      setShowVolumeHoraire(true);\r\n      setShowVolumeHommeJour(false);\r\n    } else if(value === '3'){\r\n      setShowVolumeHoraire(false);\r\n      setShowVolumeTache(false);\r\n      setShowVolumeHommeJour(true);\r\n    } else {\r\n      setShowVolumeTache(false);\r\n      setShowVolumeHoraire(false);\r\n    }\r\n  };\r\n\r\n    // Define a variable for the placeholder text\r\n    let placeholderText = 'Select an option';\r\n\r\n    // Update the placeholder text based on the selected option\r\n    if (formData.selectedOptionVolume === '1') {\r\n      placeholderText = 'Taches';\r\n    } else if (formData.selectedOptionVolume === '2') {\r\n      placeholderText = 'Heures';\r\n    } else if (formData.selectedOptionVolume === '3') {\r\n      placeholderText = 'Homme Jour';\r\n    }\r\n\r\n\r\n\r\n    // SERVICE =================================================================================================================\r\n    // Define a variable for the placeholder text\r\n    const [placeholderService, setPlaceholderService] = useState('Select a service or department');\r\n    const servicesOptions = services.map((service) => ({\r\n      label: service.nom, //  \"label\" is the name that will display\r\n      value: service.id,\r\n    }));\r\n    const optionToNameMap = {};\r\n    servicesOptions.forEach((service) => {\r\n      optionToNameMap[service.value] = service.label;\r\n    });\r\n    const handleServiceInputChange = (name,value) => {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    \r\n      // Set the placeholder based on the selected option's name\r\n      const placeholder = optionToNameMap[value] || 'Select a service or department';\r\n      setPlaceholderService(placeholder);\r\n    }\r\n\r\n    // END SERVICE =================================================================================================================\r\n\r\n    const navigate = useNavigate();\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n    \r\n      // Create an object containing the form data\r\n      const formDataObject = {\r\n        selectedOptionService: formData.selectedOptionService,\r\n        selectedOptionVolume: formData.selectedOptionVolume,\r\n        nom:\"rakoto\",\r\n        prenom:\"Bozy\",\r\n        // Add other form fields here as needed\r\n      };\r\n    \r\n      try {\r\n        // Send a POST request to your Java Servlet endpoint\r\n        const response = await axios.post(\r\n          'http://localhost:8081/rh_back/SubmitBesoinController',\r\n          formDataObject\r\n        );\r\n    \r\n        // Handle the response from the server here\r\n        console.log('Server Response:', response.data);\r\n    \r\n        // Redirect to another page if needed\r\n        // history.push('/ProfilageView');\r\n      } catch (error) {\r\n        // Handle errors here\r\n        console.error('Error:', error);\r\n      }\r\n      navigate(\"/ProfilageView\");\r\n    };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>{title}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Selector\r\n            options={servicesOptions}\r\n            placeholder={placeholderService} // Use the dynamic placeholder text\r\n            label=\"Service ou departement:\"\r\n            value={formData.selectedOptionService}\r\n            onChange={(value) => handleServiceInputChange('selectedOptionService', value)}\r\n            marginleft=\"5%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Selector\r\n            options={[\r\n              { label: 'Volume taches', value: '1' },\r\n              { label: 'Volume horaires', value: '2' },\r\n              { label: 'Volume HommeJour', value: '3' },\r\n            ]}\r\n            placeholder={placeholderText} // Use the dynamic placeholder text\r\n            label=\"Unite de volume de travail\"\r\n            value={formData.selectedOptionVolume}\r\n            onChange={(value) => handleInputChange('selectedOptionVolume', value)}\r\n            marginleft=\"5%\"\r\n          />\r\n        </div>\r\n\r\n        {showVolumeTache && <VolumeTache />}\r\n        {showVolumeHoraire && <VolumeHoraire />}\r\n        {showVolumeHommeJour && <VolumeHommeJour />}\r\n\r\n        <button type=\"submit\" style={{ marginLeft: '5%' }}>\r\n          Créer\r\n        </button>\r\n        <button type=\"reset\">Initialiser</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBesoin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}