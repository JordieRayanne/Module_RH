{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\Rotsy\\\\S5\\\\Mr_Tovo\\\\rh_front\\\\src\\\\Component\\\\FormProfilNumber.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect\n} = require(\"react\");\nfunction FormProfilNumber() {\n  // const[options,setOptions]=useState([]);\n\n  // useEffect(() => {\n  //     fetch('http://localhost:8080/rh_back/ProfilController')\n  //       .then(response => response.json())\n  //       .then(data => setOptions(data))\n  //       .catch(error => console.error('Erreur lors de la récupération des données : ', error));\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = FormProfilNumber;\nexport default FormProfilNumber;\n\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import Selector from './Selector';\n// import Input from './Input';\n\n// const FormProfil=({title,value})=>{\n\n//     const [profils, setProfils] = useState([]);\n\n//     useEffect(() => {\n//       axios.get('http://localhost:8080/rh_back/ProfilController') // Replace with the actual endpoint\n//         .then((response) => {\n//           const profilsData = response.data;\n//           setProfils(profilsData);\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching profils:', error);\n//         });\n//     }, []);\n\n//     const [formData, setFormData] = useState({\n//         selectedOptionProfil: '',\n//     });\n\n//         // PROFIL =================================================================================================================\n//     // Define a variable for the placeholder text\n//     const [placeholderProfil, setPlaceholderProfil] = useState('Select a profil');\n//     const profilsOptions = profils.map((profil) => ({\n//       label: profil.nom, //  \"label\" is the name that will display\n//       value: profil.id,\n//     }));\n//     const optionToNameMap = {};\n//     profilsOptions.forEach((profil) => {\n//       optionToNameMap[profil.value] = profil.label;\n//     });\n//     const handleProfilInputChange = (name,value) => {\n//       setFormData({\n//         ...formData,\n//         [name]: value,\n//       });\n\n//       // Set the placeholder based on the selected option's name\n//       const placeholder = optionToNameMap[value] || 'Select a profil';\n//       setPlaceholderProfil(placeholder);\n//     }\n\n//     // END PROFIL =================================================================================================================\n\n//     const navigate = useNavigate();\n//     const handleSubmit = async (e) => {\n//       e.preventDefault();\n\n//       // Create an object containing the form data\n//     //   const formDataObject = {\n//     //     selectedOptionProfil: formData.selectedOptionProfil,\n//     //     nom:\"rakoto\",\n//     //     prenom:\"Bozy\",\n//     //     // Add other form fields here as needed\n//     //   };\n\n//     //   try {\n//     //     // Send a POST request to your Java Servlet endpoint\n//     //     const response = await axios.post(\n//     //       'http://localhost:8080/rh_back/SubmitProfilController',\n//     //       formDataObject\n//     //     );\n\n//     //     // Handle the response from the server here\n//     //     console.log('Server Response:', response.data);\n\n//     //     // Redirect to another page if needed\n//     //     // history.push('/ProfilageView');\n//     //   } catch (error) {\n//     //     // Handle errors here\n//     //     console.error('Error:', error);\n//     //   }\n//       navigate(\"/ProfilageView\");\n//     };\n\n//     return (\n//         <div className=\"form-container\">\n//           <h1>{title}</h1>\n//           <form onSubmit={handleSubmit}>\n//             <div>\n//               <Selector\n//                 options={profilsOptions}\n//                 placeholder={placeholderProfil} // Use the dynamic placeholder text\n//                 label=\"Profil:\"\n//                 value={formData.selectedOptionProfil}\n//                 onChange={(value) => handleProfilInputChange('selectedOptionProfil', value)}\n//                 marginleft=\"5%\"\n//               />\n//             </div>\n//             <Input\n//                 label=\"Nombre de profil\"\n//                 type=\"number\"\n//                 wdth='50%'\n//             />\n\n//             <button type=\"submit\" style={{ marginLeft: '5%' }}>\n//               Créer\n//             </button>\n//             <button type=\"reset\">Initialiser</button>\n//           </form>\n//         </div>\n//       );\n\n// };\n// export default FormProfil;\nvar _c;\n$RefreshReg$(_c, \"FormProfilNumber\");","map":{"version":3,"names":["useState","useEffect","require","FormProfilNumber","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ITU/Rotsy/S5/Mr_Tovo/rh_front/src/Component/FormProfilNumber.js"],"sourcesContent":["const { useState , useEffect } = require(\"react\");\r\n\r\nfunction FormProfilNumber(){\r\n\r\n    // const[options,setOptions]=useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     fetch('http://localhost:8080/rh_back/ProfilController')\r\n    //       .then(response => response.json())\r\n    //       .then(data => setOptions(data))\r\n    //       .catch(error => console.error('Erreur lors de la récupération des données : ', error));\r\n    //   }, []);\r\n\r\n      return (\r\n        <div>\r\n            <p>Hello</p>\r\n          {/* <label>Choisissez un domaine :</label>\r\n          <select>\r\n            {options.map(option => (\r\n              <option key={option.id} value={option.id}>\r\n                {option.nom}\r\n              </option>\r\n            ))}\r\n          </select> */}\r\n        </div>\r\n      );    \r\n}\r\nexport default FormProfilNumber;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import Selector from './Selector';\r\n// import Input from './Input';\r\n\r\n\r\n// const FormProfil=({title,value})=>{\r\n\r\n//     const [profils, setProfils] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//       axios.get('http://localhost:8080/rh_back/ProfilController') // Replace with the actual endpoint\r\n//         .then((response) => {\r\n//           const profilsData = response.data;\r\n//           setProfils(profilsData);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error('Error fetching profils:', error);\r\n//         });\r\n//     }, []);\r\n\r\n//     const [formData, setFormData] = useState({\r\n//         selectedOptionProfil: '',\r\n//     });\r\n\r\n//         // PROFIL =================================================================================================================\r\n//     // Define a variable for the placeholder text\r\n//     const [placeholderProfil, setPlaceholderProfil] = useState('Select a profil');\r\n//     const profilsOptions = profils.map((profil) => ({\r\n//       label: profil.nom, //  \"label\" is the name that will display\r\n//       value: profil.id,\r\n//     }));\r\n//     const optionToNameMap = {};\r\n//     profilsOptions.forEach((profil) => {\r\n//       optionToNameMap[profil.value] = profil.label;\r\n//     });\r\n//     const handleProfilInputChange = (name,value) => {\r\n//       setFormData({\r\n//         ...formData,\r\n//         [name]: value,\r\n//       });\r\n    \r\n//       // Set the placeholder based on the selected option's name\r\n//       const placeholder = optionToNameMap[value] || 'Select a profil';\r\n//       setPlaceholderProfil(placeholder);\r\n//     }\r\n\r\n//     // END PROFIL =================================================================================================================\r\n\r\n//     const navigate = useNavigate();\r\n//     const handleSubmit = async (e) => {\r\n//       e.preventDefault();\r\n    \r\n//       // Create an object containing the form data\r\n//     //   const formDataObject = {\r\n//     //     selectedOptionProfil: formData.selectedOptionProfil,\r\n//     //     nom:\"rakoto\",\r\n//     //     prenom:\"Bozy\",\r\n//     //     // Add other form fields here as needed\r\n//     //   };\r\n    \r\n//     //   try {\r\n//     //     // Send a POST request to your Java Servlet endpoint\r\n//     //     const response = await axios.post(\r\n//     //       'http://localhost:8080/rh_back/SubmitProfilController',\r\n//     //       formDataObject\r\n//     //     );\r\n    \r\n//     //     // Handle the response from the server here\r\n//     //     console.log('Server Response:', response.data);\r\n    \r\n//     //     // Redirect to another page if needed\r\n//     //     // history.push('/ProfilageView');\r\n//     //   } catch (error) {\r\n//     //     // Handle errors here\r\n//     //     console.error('Error:', error);\r\n//     //   }\r\n//       navigate(\"/ProfilageView\");\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"form-container\">\r\n//           <h1>{title}</h1>\r\n//           <form onSubmit={handleSubmit}>\r\n//             <div>\r\n//               <Selector\r\n//                 options={profilsOptions}\r\n//                 placeholder={placeholderProfil} // Use the dynamic placeholder text\r\n//                 label=\"Profil:\"\r\n//                 value={formData.selectedOptionProfil}\r\n//                 onChange={(value) => handleProfilInputChange('selectedOptionProfil', value)}\r\n//                 marginleft=\"5%\"\r\n//               />\r\n//             </div>\r\n//             <Input\r\n//                 label=\"Nombre de profil\"\r\n//                 type=\"number\"\r\n//                 wdth='50%'\r\n//             />\r\n    \r\n//             <button type=\"submit\" style={{ marginLeft: '5%' }}>\r\n//               Créer\r\n//             </button>\r\n//             <button type=\"reset\">Initialiser</button>\r\n//           </form>\r\n//         </div>\r\n//       );\r\n\r\n// };\r\n// export default FormProfil;\r\n"],"mappings":";;AAAA,MAAM;EAAEA,QAAQ;EAAGC;AAAU,CAAC,GAAGC,OAAO,CAAC,OAAO,CAAC;AAEjD,SAASC,gBAAgBA,CAAA,EAAE;EAEvB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACEC,OAAA;IAAAC,QAAA,eACID,OAAA;MAAAC,QAAA,EAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASX,CAAC;AAEd;AAACC,EAAA,GAxBQP,gBAAgB;AAyBzB,eAAeA,gBAAgB;;AAE/B;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}