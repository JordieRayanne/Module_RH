{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\Rotsy\\\\S5\\\\Mr_Tovo\\\\rh_front\\\\src\\\\Component\\\\FormProfil.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Selector from './Selector';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormProfil = ({\n  title,\n  value\n}) => {\n  _s();\n  const [profils, setProfils] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/rh_back/ProfilController') // Replace with the actual endpoint\n    .then(response => {\n      const profilsData = response.data;\n      setProfils(profilsData);\n    }).catch(error => {\n      console.error('Error fetching profils:', error);\n    });\n  }, []);\n  const [formData, setFormData] = useState({\n    selectedOptionProfil: ''\n  });\n\n  // PROFIL =================================================================================================================\n  // Define a variable for the placeholder text\n  const [placeholderProfil, setPlaceholderProfil] = useState('Select a profil');\n  const profilsOptions = profils.map(profil => ({\n    label: profil.nom,\n    //  \"label\" is the name that will display\n    value: profil.id\n  }));\n  const optionToNameMap = {};\n  profilsOptions.forEach(profil => {\n    optionToNameMap[profil.value] = profil.label;\n  });\n  const handleProfilInputChange = (name, value) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Set the placeholder based on the selected option's name\n    const placeholder = optionToNameMap[value] || 'Select a profil';\n    setPlaceholderProfil(placeholder);\n  };\n\n  // END PROFIL =================================================================================================================\n\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create an object containing the form data\n    //   const formDataObject = {\n    //     selectedOptionProfil: formData.selectedOptionProfil,\n    //     nom:\"rakoto\",\n    //     prenom:\"Bozy\",\n    //     // Add other form fields here as needed\n    //   };\n\n    //   try {\n    //     // Send a POST request to your Java Servlet endpoint\n    //     const response = await axios.post(\n    //       'http://localhost:8080/rh_back/SubmitProfilController',\n    //       formDataObject\n    //     );\n\n    //     // Handle the response from the server here\n    //     console.log('Server Response:', response.data);\n\n    //     // Redirect to another page if needed\n    //     // history.push('/ProfilageView');\n    //   } catch (error) {\n    //     // Handle errors here\n    //     console.error('Error:', error);\n    //   }\n    navigate(\"/ProfilageView\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Selector, {\n          options: profilsOptions,\n          placeholder: placeholderProfil // Use the dynamic placeholder text\n          ,\n          label: \"Profil:\",\n          value: formData.selectedOptionProfil,\n          onChange: value => handleProfilInputChange('selectedOptionProfil', value),\n          marginleft: \"5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Nombre de profil\",\n        type: \"number\",\n        wdth: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: '5%'\n        },\n        children: \"Cr\\xE9er\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        children: \"Initialiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(FormProfil, \"WhZfn1JvSHm3VnyA/lV9vbrZTlU=\", false, function () {\n  return [useNavigate];\n});\n_c = FormProfil;\nexport default FormProfil;\nvar _c;\n$RefreshReg$(_c, \"FormProfil\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Selector","Input","jsxDEV","_jsxDEV","FormProfil","title","value","_s","profils","setProfils","get","then","response","profilsData","data","catch","error","console","formData","setFormData","selectedOptionProfil","placeholderProfil","setPlaceholderProfil","profilsOptions","map","profil","label","nom","id","optionToNameMap","forEach","handleProfilInputChange","name","placeholder","navigate","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","options","onChange","marginleft","type","wdth","style","marginLeft","_c","$RefreshReg$"],"sources":["D:/ITU/Rotsy/S5/Mr_Tovo/rh_front/src/Component/FormProfil.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Selector from './Selector';\r\nimport Input from './Input';\r\n\r\n\r\nconst FormProfil=({title,value})=>{\r\n\r\n    const [profils, setProfils] = useState([]);\r\n\r\n    useEffect(() => {\r\n      axios.get('http://localhost:8080/rh_back/ProfilController') // Replace with the actual endpoint\r\n        .then((response) => {\r\n          const profilsData = response.data;\r\n          setProfils(profilsData);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching profils:', error);\r\n        });\r\n    }, []);\r\n\r\n    const [formData, setFormData] = useState({\r\n        selectedOptionProfil: '',\r\n    });\r\n\r\n        // PROFIL =================================================================================================================\r\n    // Define a variable for the placeholder text\r\n    const [placeholderProfil, setPlaceholderProfil] = useState('Select a profil');\r\n    const profilsOptions = profils.map((profil) => ({\r\n      label: profil.nom, //  \"label\" is the name that will display\r\n      value: profil.id,\r\n    }));\r\n    const optionToNameMap = {};\r\n    profilsOptions.forEach((profil) => {\r\n      optionToNameMap[profil.value] = profil.label;\r\n    });\r\n    const handleProfilInputChange = (name,value) => {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    \r\n      // Set the placeholder based on the selected option's name\r\n      const placeholder = optionToNameMap[value] || 'Select a profil';\r\n      setPlaceholderProfil(placeholder);\r\n    }\r\n\r\n    // END PROFIL =================================================================================================================\r\n\r\n    const navigate = useNavigate();\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n    \r\n      // Create an object containing the form data\r\n    //   const formDataObject = {\r\n    //     selectedOptionProfil: formData.selectedOptionProfil,\r\n    //     nom:\"rakoto\",\r\n    //     prenom:\"Bozy\",\r\n    //     // Add other form fields here as needed\r\n    //   };\r\n    \r\n    //   try {\r\n    //     // Send a POST request to your Java Servlet endpoint\r\n    //     const response = await axios.post(\r\n    //       'http://localhost:8080/rh_back/SubmitProfilController',\r\n    //       formDataObject\r\n    //     );\r\n    \r\n    //     // Handle the response from the server here\r\n    //     console.log('Server Response:', response.data);\r\n    \r\n    //     // Redirect to another page if needed\r\n    //     // history.push('/ProfilageView');\r\n    //   } catch (error) {\r\n    //     // Handle errors here\r\n    //     console.error('Error:', error);\r\n    //   }\r\n      navigate(\"/ProfilageView\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n          <h1>{title}</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <Selector\r\n                options={profilsOptions}\r\n                placeholder={placeholderProfil} // Use the dynamic placeholder text\r\n                label=\"Profil:\"\r\n                value={formData.selectedOptionProfil}\r\n                onChange={(value) => handleProfilInputChange('selectedOptionProfil', value)}\r\n                marginleft=\"5%\"\r\n              />\r\n            </div>\r\n            <Input\r\n                label=\"Nombre de profil\"\r\n                type=\"number\"\r\n                wdth='50%'\r\n            />\r\n    \r\n            <button type=\"submit\" style={{ marginLeft: '5%' }}>\r\n              Cr√©er\r\n            </button>\r\n            <button type=\"reset\">Initialiser</button>\r\n          </form>\r\n        </div>\r\n      );\r\n\r\n};\r\nexport default FormProfil;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}